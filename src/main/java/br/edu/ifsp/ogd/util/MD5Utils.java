package br.edu.ifsp.ogd.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.security.DigestInputStream;
import java.security.MessageDigest;

public class MD5Utils {
	/**
	 * This method is used to generate a MD5 key for a received File.
	 * 
	 * @param file:
	 *            the file which will be generated the key
	 * @return the string of the MD5 key
	 * @throws Exception
	 *             to file not found
	 */
	public static String getMD5(File file) throws Exception {
		MessageDigest messageDigest = MessageDigest.getInstance("MD5");
		InputStream inputStream = new FileInputStream(file);
		DigestInputStream dis = new DigestInputStream(inputStream, messageDigest);

		byte[] digestBytes = messageDigest.digest();
		String md5 = convertByteToStringMD5(digestBytes);

		return md5;
	}

	/**
	 * This method is used to convert the byte[] array generated by getMD5 file
	 * to a String.
	 * 
	 * @param md5Bytes:
	 *            the array of bytes to be converted to String
	 * @return the string of the MD5 bytes array
	 */
	private static String convertByteToStringMD5(byte[] md5Bytes) {
		StringBuffer hexString = new StringBuffer();
		for (int i = 0; i < md5Bytes.length; i++) {
			if ((0xff & md5Bytes[i]) < 0x10) {
				hexString.append("0" + Integer.toHexString((0xFF & md5Bytes[i])));
			} else {
				hexString.append(Integer.toHexString(0xFF & md5Bytes[i]));
			}
		}

		return hexString.toString();
	}
}
